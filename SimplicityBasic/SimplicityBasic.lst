;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/16/2012 4:18:40 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2981      	GOTO       385
_Mul_16x16_U:
;__Lib_Math.mpas,121 :: 		
;__Lib_Math.mpas,127 :: 		
0x0003	0x1283      	BCF        STATUS, 5
;__Lib_Math.mpas,128 :: 		
0x0004	0x1303      	BCF        STATUS, 6
;__Lib_Math.mpas,129 :: 		
0x0005	0x01FB      	CLRF       R11
;__Lib_Math.mpas,130 :: 		
0x0006	0x01FA      	CLRF       R10
;__Lib_Math.mpas,131 :: 		
0x0007	0x01F9      	CLRF       R9
;__Lib_Math.mpas,132 :: 		
0x0008	0x3080      	MOVLW      128
;__Lib_Math.mpas,133 :: 		
0x0009	0x00F8      	MOVWF      R8
;__Lib_Math.mpas,134 :: 		
0x000A	0x0CF1      	RRF        R1, 1
;__Lib_Math.mpas,135 :: 		
0x000B	0x0CF0      	RRF        R0, 1
;__Lib_Math.mpas,136 :: 		
0x000C	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.mpas,137 :: 		
0x000D	0x2817      	GOTO       $+10
;__Lib_Math.mpas,138 :: 		
0x000E	0x0874      	MOVF       R4, 0
;__Lib_Math.mpas,139 :: 		
0x000F	0x07F9      	ADDWF      R9, 1
;__Lib_Math.mpas,140 :: 		
0x0010	0x0875      	MOVF       R5, 0
;__Lib_Math.mpas,141 :: 		
0x0011	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,142 :: 		
0x0012	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.mpas,143 :: 		
0x0013	0x07FA      	ADDWF      R10, 1
;__Lib_Math.mpas,144 :: 		
0x0014	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,145 :: 		
0x0015	0x0AFB      	INCF       R11, 1
;__Lib_Math.mpas,146 :: 		
0x0016	0x1003      	BCF        STATUS, 0
;__Lib_Math.mpas,147 :: 		
0x0017	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.mpas,148 :: 		
0x0018	0x281F      	GOTO       $+7
;__Lib_Math.mpas,149 :: 		
0x0019	0x0874      	MOVF       R4, 0
;__Lib_Math.mpas,150 :: 		
0x001A	0x07FA      	ADDWF      R10, 1
;__Lib_Math.mpas,151 :: 		
0x001B	0x0875      	MOVF       R5, 0
;__Lib_Math.mpas,152 :: 		
0x001C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,153 :: 		
0x001D	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.mpas,154 :: 		
0x001E	0x07FB      	ADDWF      R11, 1
;__Lib_Math.mpas,155 :: 		
0x001F	0x0CFB      	RRF        R11, 1
;__Lib_Math.mpas,156 :: 		
0x0020	0x0CFA      	RRF        R10, 1
;__Lib_Math.mpas,157 :: 		
0x0021	0x0CF9      	RRF        R9, 1
;__Lib_Math.mpas,158 :: 		
0x0022	0x0CF8      	RRF        R8, 1
;__Lib_Math.mpas,159 :: 		
0x0023	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.mpas,160 :: 		
0x0024	0x280A      	GOTO       $-26
;__Lib_Math.mpas,161 :: 		
0x0025	0x087B      	MOVF       R11, 0
;__Lib_Math.mpas,162 :: 		
0x0026	0x00F3      	MOVWF      R3
;__Lib_Math.mpas,163 :: 		
0x0027	0x087A      	MOVF       R10, 0
;__Lib_Math.mpas,164 :: 		
0x0028	0x00F2      	MOVWF      R2
;__Lib_Math.mpas,165 :: 		
0x0029	0x0879      	MOVF       R9, 0
;__Lib_Math.mpas,166 :: 		
0x002A	0x00F1      	MOVWF      R1
;__Lib_Math.mpas,167 :: 		
0x002B	0x0878      	MOVF       R8, 0
;__Lib_Math.mpas,168 :: 		
0x002C	0x00F0      	MOVWF      R0
;__Lib_Math.mpas,170 :: 		
L_end_Mul_16x16_U:
0x002D	0x0008      	RETURN
; end of _Mul_16x16_U
_PWM2_Set_Duty:
;__Lib_PWM_c21.mpas,60 :: 		
;__Lib_PWM_c21.mpas,61 :: 		
0x002E	0x1683      	BSF        STATUS, 5
0x002F	0x1303      	BCF        STATUS, 6
0x0030	0x0812      	MOVF       PR2, 0
0x0031	0x3E01      	ADDLW      1
0x0032	0x00F0      	MOVWF      R0
0x0033	0x3000      	MOVLW      0
0x0034	0x1803      	BTFSC      STATUS, 0
0x0035	0x3E01      	ADDLW      1
0x0036	0x00F1      	MOVWF      R0+1
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x0834      	MOVF       FARG_PWM2_Set_Duty_new_duty, 0
0x0039	0x00F4      	MOVWF      R4
0x003A	0x01F5      	CLRF       R4+1
0x003B	0x2003      	CALL       _Mul_16x16_U
0x003C	0x3006      	MOVLW      6
0x003D	0x00F2      	MOVWF      R2
0x003E	0x0870      	MOVF       R0, 0
0x003F	0x00F4      	MOVWF      R4
0x0040	0x0871      	MOVF       R0+1, 0
0x0041	0x00F5      	MOVWF      R4+1
0x0042	0x0872      	MOVF       R2, 0
L__PWM2_Set_Duty18:
0x0043	0x1903      	BTFSC      STATUS, 2
0x0044	0x284A      	GOTO       L__PWM2_Set_Duty19
0x0045	0x0CF5      	RRF        R4+1, 1
0x0046	0x0CF4      	RRF        R4, 1
0x0047	0x13F5      	BCF        R4+1, 7
0x0048	0x3EFF      	ADDLW      255
0x0049	0x2843      	GOTO       L__PWM2_Set_Duty18
L__PWM2_Set_Duty19:
;__Lib_PWM_c21.mpas,62 :: 		
0x004A	0x3004      	MOVLW      4
0x004B	0x00F1      	MOVWF      R1
0x004C	0x0874      	MOVF       R4, 0
0x004D	0x00F0      	MOVWF      R0
0x004E	0x0871      	MOVF       R1, 0
L__PWM2_Set_Duty20:
0x004F	0x1903      	BTFSC      STATUS, 2
0x0050	0x2855      	GOTO       L__PWM2_Set_Duty21
0x0051	0x0DF0      	RLF        R0, 1
0x0052	0x1070      	BCF        R0, 0
0x0053	0x3EFF      	ADDLW      255
0x0054	0x284F      	GOTO       L__PWM2_Set_Duty20
L__PWM2_Set_Duty21:
0x0055	0x3030      	MOVLW      48
0x0056	0x0570      	ANDWF      R0, 0
0x0057	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.mpas,63 :: 		
0x0058	0x0874      	MOVF       R4, 0
0x0059	0x00F0      	MOVWF      R0
0x005A	0x0875      	MOVF       R4+1, 0
0x005B	0x00F1      	MOVWF      R0+1
0x005C	0x0CF1      	RRF        R0+1, 1
0x005D	0x0CF0      	RRF        R0, 1
0x005E	0x13F1      	BCF        R0+1, 7
0x005F	0x0CF1      	RRF        R0+1, 1
0x0060	0x0CF0      	RRF        R0, 1
0x0061	0x13F1      	BCF        R0+1, 7
0x0062	0x0870      	MOVF       R0, 0
0x0063	0x009B      	MOVWF      CCPR2L
;__Lib_PWM_c21.mpas,64 :: 		
0x0064	0x300F      	MOVLW      15
0x0065	0x059D      	ANDWF      CCP2CON, 1
;__Lib_PWM_c21.mpas,65 :: 		
0x0066	0x0873      	MOVF       R3, 0
0x0067	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.mpas,66 :: 		
L_end_PWM2_Set_Duty:
0x0068	0x0008      	RETURN
; end of _PWM2_Set_Duty
_PWM1_Set_Duty:
;__Lib_PWM_c21.mpas,25 :: 		
;__Lib_PWM_c21.mpas,26 :: 		
0x0069	0x1683      	BSF        STATUS, 5
0x006A	0x1303      	BCF        STATUS, 6
0x006B	0x0812      	MOVF       PR2, 0
0x006C	0x3E01      	ADDLW      1
0x006D	0x00F0      	MOVWF      R0
0x006E	0x3000      	MOVLW      0
0x006F	0x1803      	BTFSC      STATUS, 0
0x0070	0x3E01      	ADDLW      1
0x0071	0x00F1      	MOVWF      R0+1
0x0072	0x1283      	BCF        STATUS, 5
0x0073	0x0834      	MOVF       FARG_PWM1_Set_Duty_new_duty, 0
0x0074	0x00F4      	MOVWF      R4
0x0075	0x01F5      	CLRF       R4+1
0x0076	0x2003      	CALL       _Mul_16x16_U
0x0077	0x3006      	MOVLW      6
0x0078	0x00F2      	MOVWF      R2
0x0079	0x0870      	MOVF       R0, 0
0x007A	0x00F4      	MOVWF      R4
0x007B	0x0871      	MOVF       R0+1, 0
0x007C	0x00F5      	MOVWF      R4+1
0x007D	0x0872      	MOVF       R2, 0
L__PWM1_Set_Duty10:
0x007E	0x1903      	BTFSC      STATUS, 2
0x007F	0x2885      	GOTO       L__PWM1_Set_Duty11
0x0080	0x0CF5      	RRF        R4+1, 1
0x0081	0x0CF4      	RRF        R4, 1
0x0082	0x13F5      	BCF        R4+1, 7
0x0083	0x3EFF      	ADDLW      255
0x0084	0x287E      	GOTO       L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.mpas,27 :: 		
0x0085	0x3004      	MOVLW      4
0x0086	0x00F1      	MOVWF      R1
0x0087	0x0874      	MOVF       R4, 0
0x0088	0x00F0      	MOVWF      R0
0x0089	0x0871      	MOVF       R1, 0
L__PWM1_Set_Duty12:
0x008A	0x1903      	BTFSC      STATUS, 2
0x008B	0x2890      	GOTO       L__PWM1_Set_Duty13
0x008C	0x0DF0      	RLF        R0, 1
0x008D	0x1070      	BCF        R0, 0
0x008E	0x3EFF      	ADDLW      255
0x008F	0x288A      	GOTO       L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x0090	0x3030      	MOVLW      48
0x0091	0x0570      	ANDWF      R0, 0
0x0092	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.mpas,28 :: 		
0x0093	0x0874      	MOVF       R4, 0
0x0094	0x00F0      	MOVWF      R0
0x0095	0x0875      	MOVF       R4+1, 0
0x0096	0x00F1      	MOVWF      R0+1
0x0097	0x0CF1      	RRF        R0+1, 1
0x0098	0x0CF0      	RRF        R0, 1
0x0099	0x13F1      	BCF        R0+1, 7
0x009A	0x0CF1      	RRF        R0+1, 1
0x009B	0x0CF0      	RRF        R0, 1
0x009C	0x13F1      	BCF        R0+1, 7
0x009D	0x0870      	MOVF       R0, 0
0x009E	0x0095      	MOVWF      CCPR1L
;__Lib_PWM_c21.mpas,29 :: 		
0x009F	0x300F      	MOVLW      15
0x00A0	0x0597      	ANDWF      CCP1CON, 1
;__Lib_PWM_c21.mpas,30 :: 		
0x00A1	0x0873      	MOVF       R3, 0
0x00A2	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.mpas,31 :: 		
L_end_PWM1_Set_Duty:
0x00A3	0x0008      	RETURN
; end of _PWM1_Set_Duty
_PWM1_Init:
;__Lib_PWM_c21.mpas,15 :: 		
;__Lib_PWM_c21.mpas,17 :: 		
0x00A4	0x1283      	BCF        STATUS, 5
0x00A5	0x1303      	BCF        STATUS, 6
0x00A6	0x0195      	CLRF       CCPR1L
;__Lib_PWM_c21.mpas,18 :: 		
0x00A7	0x1217      	BCF        CCP1CON, 4
;__Lib_PWM_c21.mpas,19 :: 		
0x00A8	0x1297      	BCF        CCP1CON, 5
;__Lib_PWM_c21.mpas,20 :: 		
L_end_PWM1_Init:
0x00A9	0x0008      	RETURN
; end of _PWM1_Init
_PWM2_Start:
;__Lib_PWM_c21.mpas,69 :: 		
;__Lib_PWM_c21.mpas,70 :: 		
0x00AA	0x1683      	BSF        STATUS, 5
0x00AB	0x1303      	BCF        STATUS, 6
0x00AC	0x1087      	BCF        TRISC1_bit, 1
;__Lib_PWM_c21.mpas,71 :: 		
0x00AD	0x1283      	BCF        STATUS, 5
0x00AE	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.mpas,72 :: 		
0x00AF	0x300C      	MOVLW      12
0x00B0	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.mpas,73 :: 		
L_end_PWM2_Start:
0x00B1	0x0008      	RETURN
; end of _PWM2_Start
_PWM1_Start:
;__Lib_PWM_c21.mpas,34 :: 		
;__Lib_PWM_c21.mpas,35 :: 		
0x00B2	0x1683      	BSF        STATUS, 5
0x00B3	0x1303      	BCF        STATUS, 6
0x00B4	0x1107      	BCF        TRISC2_bit, 2
;__Lib_PWM_c21.mpas,36 :: 		
0x00B5	0x1283      	BCF        STATUS, 5
0x00B6	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.mpas,37 :: 		
0x00B7	0x300C      	MOVLW      12
0x00B8	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.mpas,38 :: 		
L_end_PWM1_Start:
0x00B9	0x0008      	RETURN
; end of _PWM1_Start
_PWM2_Init:
;__Lib_PWM_c21.mpas,50 :: 		
;__Lib_PWM_c21.mpas,52 :: 		
0x00BA	0x1283      	BCF        STATUS, 5
0x00BB	0x1303      	BCF        STATUS, 6
0x00BC	0x019B      	CLRF       CCPR2L
;__Lib_PWM_c21.mpas,53 :: 		
0x00BD	0x121D      	BCF        CCP2CON, 4
;__Lib_PWM_c21.mpas,54 :: 		
0x00BE	0x129D      	BCF        CCP2CON, 5
;__Lib_PWM_c21.mpas,55 :: 		
L_end_PWM2_Init:
0x00BF	0x0008      	RETURN
; end of _PWM2_Init
_InitSensors:
;SimplicityBasic.mbas,18 :: 		sub procedure InitSensors
;SimplicityBasic.mbas,19 :: 		TRISB = 0x00
0x00C0	0x1683      	BSF        STATUS, 5
0x00C1	0x1303      	BCF        STATUS, 6
0x00C2	0x0186      	CLRF       TRISB
;SimplicityBasic.mbas,20 :: 		PORTB = 0xFF
0x00C3	0x30FF      	MOVLW      255
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x0086      	MOVWF      PORTB
;SimplicityBasic.mbas,22 :: 		delay_us(10)
0x00C6	0x3010      	MOVLW      16
0x00C7	0x00FD      	MOVWF      R13
L__InitSensors2:
0x00C8	0x0BFD      	DECFSZ     R13, 1
0x00C9	0x28C8      	GOTO       L__InitSensors2
0x00CA	0x0000      	NOP
;SimplicityBasic.mbas,24 :: 		TRISB = 0xFF
0x00CB	0x30FF      	MOVLW      255
0x00CC	0x1683      	BSF        STATUS, 5
0x00CD	0x0086      	MOVWF      TRISB
;SimplicityBasic.mbas,25 :: 		end sub
L_end_InitSensors:
0x00CE	0x0008      	RETURN
; end of _InitSensors
_ReadSensors:
;SimplicityBasic.mbas,30 :: 		sub procedure ReadSensors
;SimplicityBasic.mbas,31 :: 		s1 = 1
0x00CF	0x3001      	MOVLW      1
0x00D0	0x1283      	BCF        STATUS, 5
0x00D1	0x1303      	BCF        STATUS, 6
0x00D2	0x00A2      	MOVWF      _s1
0x00D3	0x01A3      	CLRF       _s1+1
;SimplicityBasic.mbas,32 :: 		s2 = 1
0x00D4	0x3001      	MOVLW      1
0x00D5	0x00AA      	MOVWF      _s2
0x00D6	0x01AB      	CLRF       _s2+1
;SimplicityBasic.mbas,33 :: 		s3 = 1
0x00D7	0x3001      	MOVLW      1
0x00D8	0x00AC      	MOVWF      _s3
0x00D9	0x01AD      	CLRF       _s3+1
;SimplicityBasic.mbas,34 :: 		s4 = 1
0x00DA	0x3001      	MOVLW      1
0x00DB	0x00AE      	MOVWF      _s4
0x00DC	0x01AF      	CLRF       _s4+1
;SimplicityBasic.mbas,35 :: 		s5 = 1
0x00DD	0x3001      	MOVLW      1
0x00DE	0x00A4      	MOVWF      _s5
0x00DF	0x01A5      	CLRF       _s5+1
;SimplicityBasic.mbas,36 :: 		s6 = 1
0x00E0	0x3001      	MOVLW      1
0x00E1	0x00A6      	MOVWF      _s6
0x00E2	0x01A7      	CLRF       _s6+1
;SimplicityBasic.mbas,37 :: 		s7 = 1
0x00E3	0x3001      	MOVLW      1
0x00E4	0x00A8      	MOVWF      _s7
0x00E5	0x01A9      	CLRF       _s7+1
;SimplicityBasic.mbas,42 :: 		if PORTB.RB7 <> 0  then
0x00E6	0x1F86      	BTFSS      PORTB, 7
0x00E7	0x28FB      	GOTO       L__ReadSensors5
;SimplicityBasic.mbas,43 :: 		while PORTB.RB7 <> 0
L__ReadSensors8:
0x00E8	0x1F86      	BTFSS      PORTB, 7
0x00E9	0x28FB      	GOTO       L__ReadSensors9
;SimplicityBasic.mbas,44 :: 		s1 = s1 + 1
0x00EA	0x0AA2      	INCF       _s1, 1
0x00EB	0x1903      	BTFSC      STATUS, 2
0x00EC	0x0AA3      	INCF       _s1+1, 1
;SimplicityBasic.mbas,45 :: 		if s1 >= 800 then break end if
0x00ED	0x3080      	MOVLW      128
0x00EE	0x0623      	XORWF      _s1+1, 0
0x00EF	0x00F0      	MOVWF      R0
0x00F0	0x3080      	MOVLW      128
0x00F1	0x3A03      	XORLW      3
0x00F2	0x0270      	SUBWF      R0, 0
0x00F3	0x1D03      	BTFSS      STATUS, 2
0x00F4	0x28F7      	GOTO       L__ReadSensors119
0x00F5	0x3020      	MOVLW      32
0x00F6	0x0222      	SUBWF      _s1, 0
L__ReadSensors119:
0x00F7	0x1C03      	BTFSS      STATUS, 0
0x00F8	0x28FA      	GOTO       L__ReadSensors13
0x00F9	0x28FB      	GOTO       L__ReadSensors9
L__ReadSensors13:
;SimplicityBasic.mbas,46 :: 		wend
0x00FA	0x28E8      	GOTO       L__ReadSensors8
L__ReadSensors9:
L__ReadSensors5:
;SimplicityBasic.mbas,52 :: 		if PORTB.RB6 <> 0  then
0x00FB	0x1F06      	BTFSS      PORTB, 6
0x00FC	0x2910      	GOTO       L__ReadSensors16
;SimplicityBasic.mbas,53 :: 		while PORTB.RB6 <> 0
L__ReadSensors19:
0x00FD	0x1F06      	BTFSS      PORTB, 6
0x00FE	0x2910      	GOTO       L__ReadSensors20
;SimplicityBasic.mbas,54 :: 		s2 = s2 + 1
0x00FF	0x0AAA      	INCF       _s2, 1
0x0100	0x1903      	BTFSC      STATUS, 2
0x0101	0x0AAB      	INCF       _s2+1, 1
;SimplicityBasic.mbas,55 :: 		if s2 >= 800 then break end if
0x0102	0x3080      	MOVLW      128
0x0103	0x062B      	XORWF      _s2+1, 0
0x0104	0x00F0      	MOVWF      R0
0x0105	0x3080      	MOVLW      128
0x0106	0x3A03      	XORLW      3
0x0107	0x0270      	SUBWF      R0, 0
0x0108	0x1D03      	BTFSS      STATUS, 2
0x0109	0x290C      	GOTO       L__ReadSensors120
0x010A	0x3020      	MOVLW      32
0x010B	0x022A      	SUBWF      _s2, 0
L__ReadSensors120:
0x010C	0x1C03      	BTFSS      STATUS, 0
0x010D	0x290F      	GOTO       L__ReadSensors24
0x010E	0x2910      	GOTO       L__ReadSensors20
L__ReadSensors24:
;SimplicityBasic.mbas,56 :: 		wend
0x010F	0x28FD      	GOTO       L__ReadSensors19
L__ReadSensors20:
L__ReadSensors16:
;SimplicityBasic.mbas,62 :: 		if PORTB.RB5 <> 0 then
0x0110	0x1E86      	BTFSS      PORTB, 5
0x0111	0x2925      	GOTO       L__ReadSensors27
;SimplicityBasic.mbas,63 :: 		while PORTB.RB5 <> 0
L__ReadSensors30:
0x0112	0x1E86      	BTFSS      PORTB, 5
0x0113	0x2925      	GOTO       L__ReadSensors31
;SimplicityBasic.mbas,64 :: 		s3 = s3 + 1
0x0114	0x0AAC      	INCF       _s3, 1
0x0115	0x1903      	BTFSC      STATUS, 2
0x0116	0x0AAD      	INCF       _s3+1, 1
;SimplicityBasic.mbas,65 :: 		if s3 >= 1000 then break end if
0x0117	0x3080      	MOVLW      128
0x0118	0x062D      	XORWF      _s3+1, 0
0x0119	0x00F0      	MOVWF      R0
0x011A	0x3080      	MOVLW      128
0x011B	0x3A03      	XORLW      3
0x011C	0x0270      	SUBWF      R0, 0
0x011D	0x1D03      	BTFSS      STATUS, 2
0x011E	0x2921      	GOTO       L__ReadSensors121
0x011F	0x30E8      	MOVLW      232
0x0120	0x022C      	SUBWF      _s3, 0
L__ReadSensors121:
0x0121	0x1C03      	BTFSS      STATUS, 0
0x0122	0x2924      	GOTO       L__ReadSensors35
0x0123	0x2925      	GOTO       L__ReadSensors31
L__ReadSensors35:
;SimplicityBasic.mbas,66 :: 		wend
0x0124	0x2912      	GOTO       L__ReadSensors30
L__ReadSensors31:
L__ReadSensors27:
;SimplicityBasic.mbas,72 :: 		if PORTB.RB4 <> 0 then
0x0125	0x1E06      	BTFSS      PORTB, 4
0x0126	0x293A      	GOTO       L__ReadSensors38
;SimplicityBasic.mbas,73 :: 		while PORTB.RB4 <> 0
L__ReadSensors41:
0x0127	0x1E06      	BTFSS      PORTB, 4
0x0128	0x293A      	GOTO       L__ReadSensors42
;SimplicityBasic.mbas,74 :: 		s4 = s4 + 1
0x0129	0x0AAE      	INCF       _s4, 1
0x012A	0x1903      	BTFSC      STATUS, 2
0x012B	0x0AAF      	INCF       _s4+1, 1
;SimplicityBasic.mbas,75 :: 		if s4 >= 1000 then break end if
0x012C	0x3080      	MOVLW      128
0x012D	0x062F      	XORWF      _s4+1, 0
0x012E	0x00F0      	MOVWF      R0
0x012F	0x3080      	MOVLW      128
0x0130	0x3A03      	XORLW      3
0x0131	0x0270      	SUBWF      R0, 0
0x0132	0x1D03      	BTFSS      STATUS, 2
0x0133	0x2936      	GOTO       L__ReadSensors122
0x0134	0x30E8      	MOVLW      232
0x0135	0x022E      	SUBWF      _s4, 0
L__ReadSensors122:
0x0136	0x1C03      	BTFSS      STATUS, 0
0x0137	0x2939      	GOTO       L__ReadSensors46
0x0138	0x293A      	GOTO       L__ReadSensors42
L__ReadSensors46:
;SimplicityBasic.mbas,76 :: 		wend
0x0139	0x2927      	GOTO       L__ReadSensors41
L__ReadSensors42:
L__ReadSensors38:
;SimplicityBasic.mbas,82 :: 		if PORTB.RB3 <> 0 then
0x013A	0x1D86      	BTFSS      PORTB, 3
0x013B	0x294F      	GOTO       L__ReadSensors49
;SimplicityBasic.mbas,83 :: 		while PORTB.RB3 <> 0
L__ReadSensors52:
0x013C	0x1D86      	BTFSS      PORTB, 3
0x013D	0x294F      	GOTO       L__ReadSensors53
;SimplicityBasic.mbas,84 :: 		s5 = s5 + 1
0x013E	0x0AA4      	INCF       _s5, 1
0x013F	0x1903      	BTFSC      STATUS, 2
0x0140	0x0AA5      	INCF       _s5+1, 1
;SimplicityBasic.mbas,85 :: 		if s5 >= 1000 then break end if
0x0141	0x3080      	MOVLW      128
0x0142	0x0625      	XORWF      _s5+1, 0
0x0143	0x00F0      	MOVWF      R0
0x0144	0x3080      	MOVLW      128
0x0145	0x3A03      	XORLW      3
0x0146	0x0270      	SUBWF      R0, 0
0x0147	0x1D03      	BTFSS      STATUS, 2
0x0148	0x294B      	GOTO       L__ReadSensors123
0x0149	0x30E8      	MOVLW      232
0x014A	0x0224      	SUBWF      _s5, 0
L__ReadSensors123:
0x014B	0x1C03      	BTFSS      STATUS, 0
0x014C	0x294E      	GOTO       L__ReadSensors57
0x014D	0x294F      	GOTO       L__ReadSensors53
L__ReadSensors57:
;SimplicityBasic.mbas,86 :: 		wend
0x014E	0x293C      	GOTO       L__ReadSensors52
L__ReadSensors53:
L__ReadSensors49:
;SimplicityBasic.mbas,93 :: 		if PORTB.RB2 <> 0 then
0x014F	0x1D06      	BTFSS      PORTB, 2
0x0150	0x2964      	GOTO       L__ReadSensors60
;SimplicityBasic.mbas,94 :: 		while PORTB.RB2 <> 0
L__ReadSensors63:
0x0151	0x1D06      	BTFSS      PORTB, 2
0x0152	0x2964      	GOTO       L__ReadSensors64
;SimplicityBasic.mbas,95 :: 		s6 = s6 + 1
0x0153	0x0AA6      	INCF       _s6, 1
0x0154	0x1903      	BTFSC      STATUS, 2
0x0155	0x0AA7      	INCF       _s6+1, 1
;SimplicityBasic.mbas,96 :: 		if s6 >= 1000 then break end if
0x0156	0x3080      	MOVLW      128
0x0157	0x0627      	XORWF      _s6+1, 0
0x0158	0x00F0      	MOVWF      R0
0x0159	0x3080      	MOVLW      128
0x015A	0x3A03      	XORLW      3
0x015B	0x0270      	SUBWF      R0, 0
0x015C	0x1D03      	BTFSS      STATUS, 2
0x015D	0x2960      	GOTO       L__ReadSensors124
0x015E	0x30E8      	MOVLW      232
0x015F	0x0226      	SUBWF      _s6, 0
L__ReadSensors124:
0x0160	0x1C03      	BTFSS      STATUS, 0
0x0161	0x2963      	GOTO       L__ReadSensors68
0x0162	0x2964      	GOTO       L__ReadSensors64
L__ReadSensors68:
;SimplicityBasic.mbas,97 :: 		wend
0x0163	0x2951      	GOTO       L__ReadSensors63
L__ReadSensors64:
L__ReadSensors60:
;SimplicityBasic.mbas,103 :: 		if PORTB.RB1 <> 0 then
0x0164	0x1C86      	BTFSS      PORTB, 1
0x0165	0x2979      	GOTO       L__ReadSensors71
;SimplicityBasic.mbas,104 :: 		while PORTB.RB1 <> 0
L__ReadSensors74:
0x0166	0x1C86      	BTFSS      PORTB, 1
0x0167	0x2979      	GOTO       L__ReadSensors75
;SimplicityBasic.mbas,105 :: 		s7 = s7 + 1
0x0168	0x0AA8      	INCF       _s7, 1
0x0169	0x1903      	BTFSC      STATUS, 2
0x016A	0x0AA9      	INCF       _s7+1, 1
;SimplicityBasic.mbas,106 :: 		if s7 >= 1000 then break end if
0x016B	0x3080      	MOVLW      128
0x016C	0x0629      	XORWF      _s7+1, 0
0x016D	0x00F0      	MOVWF      R0
0x016E	0x3080      	MOVLW      128
0x016F	0x3A03      	XORLW      3
0x0170	0x0270      	SUBWF      R0, 0
0x0171	0x1D03      	BTFSS      STATUS, 2
0x0172	0x2975      	GOTO       L__ReadSensors125
0x0173	0x30E8      	MOVLW      232
0x0174	0x0228      	SUBWF      _s7, 0
L__ReadSensors125:
0x0175	0x1C03      	BTFSS      STATUS, 0
0x0176	0x2978      	GOTO       L__ReadSensors79
0x0177	0x2979      	GOTO       L__ReadSensors75
L__ReadSensors79:
;SimplicityBasic.mbas,107 :: 		wend
0x0178	0x2966      	GOTO       L__ReadSensors74
L__ReadSensors75:
L__ReadSensors71:
;SimplicityBasic.mbas,109 :: 		end sub
L_end_ReadSensors:
0x0179	0x0008      	RETURN
; end of _ReadSensors
_StopMotors:
;SimplicityBasic.mbas,9 :: 		sub procedure StopMotors
;SimplicityBasic.mbas,10 :: 		PWM1_Set_Duty(0)
0x017A	0x1283      	BCF        STATUS, 5
0x017B	0x1303      	BCF        STATUS, 6
0x017C	0x01B4      	CLRF       FARG_PWM1_Set_Duty_new_duty
0x017D	0x2069      	CALL       _PWM1_Set_Duty
;SimplicityBasic.mbas,11 :: 		PWM2_Set_Duty(0)
0x017E	0x01B4      	CLRF       FARG_PWM2_Set_Duty_new_duty
0x017F	0x202E      	CALL       _PWM2_Set_Duty
;SimplicityBasic.mbas,12 :: 		end sub
L_end_StopMotors:
0x0180	0x0008      	RETURN
; end of _StopMotors
_main:
;SimplicityBasic.mbas,141 :: 		main:
;SimplicityBasic.mbas,142 :: 		ADCON1  = 6
0x0181	0x3006      	MOVLW      6
0x0182	0x1683      	BSF        STATUS, 5
0x0183	0x1303      	BCF        STATUS, 6
0x0184	0x009F      	MOVWF      ADCON1
;SimplicityBasic.mbas,143 :: 		PORTA   = 0
0x0185	0x1283      	BCF        STATUS, 5
0x0186	0x0185      	CLRF       PORTA
;SimplicityBasic.mbas,144 :: 		TRISA   = 0
0x0187	0x1683      	BSF        STATUS, 5
0x0188	0x0185      	CLRF       TRISA
;SimplicityBasic.mbas,145 :: 		PORTC   = 0
0x0189	0x1283      	BCF        STATUS, 5
0x018A	0x0187      	CLRF       PORTC
;SimplicityBasic.mbas,146 :: 		TRISC   = 0
0x018B	0x1683      	BSF        STATUS, 5
0x018C	0x0187      	CLRF       TRISC
;SimplicityBasic.mbas,147 :: 		PWM1_Init(5000)
0x018D	0x1283      	BCF        STATUS, 5
0x018E	0x1012      	BCF        T2CON, 0
0x018F	0x1092      	BCF        T2CON, 1
0x0190	0x1412      	BSF        T2CON, 0
0x0191	0x1092      	BCF        T2CON, 1
0x0192	0x30F9      	MOVLW      249
0x0193	0x1683      	BSF        STATUS, 5
0x0194	0x0092      	MOVWF      PR2
0x0195	0x20A4      	CALL       _PWM1_Init
;SimplicityBasic.mbas,148 :: 		PWM2_Init(5000)
0x0196	0x1012      	BCF        T2CON, 0
0x0197	0x1092      	BCF        T2CON, 1
0x0198	0x1412      	BSF        T2CON, 0
0x0199	0x1092      	BCF        T2CON, 1
0x019A	0x30F9      	MOVLW      249
0x019B	0x1683      	BSF        STATUS, 5
0x019C	0x0092      	MOVWF      PR2
0x019D	0x20BA      	CALL       _PWM2_Init
;SimplicityBasic.mbas,149 :: 		PWM1_Start()
0x019E	0x20B2      	CALL       _PWM1_Start
;SimplicityBasic.mbas,150 :: 		PWM2_Start()
0x019F	0x20AA      	CALL       _PWM2_Start
;SimplicityBasic.mbas,153 :: 		OPTION_REG.NOT_RBPU = 1
0x01A0	0x1683      	BSF        STATUS, 5
0x01A1	0x1781      	BSF        OPTION_REG, 7
;SimplicityBasic.mbas,156 :: 		PORTA.RA0 = 0
0x01A2	0x1283      	BCF        STATUS, 5
0x01A3	0x1005      	BCF        PORTA, 0
;SimplicityBasic.mbas,157 :: 		PORTA.RA1 = 1
0x01A4	0x1485      	BSF        PORTA, 1
;SimplicityBasic.mbas,160 :: 		PORTA.RA2 = 0
0x01A5	0x1105      	BCF        PORTA, 2
;SimplicityBasic.mbas,161 :: 		PORTA.RA3 = 1
0x01A6	0x1585      	BSF        PORTA, 3
;SimplicityBasic.mbas,164 :: 		StopMotors()
0x01A7	0x217A      	CALL       _StopMotors
;SimplicityBasic.mbas,169 :: 		while 1
L__main94:
;SimplicityBasic.mbas,170 :: 		InitSensors()
0x01A8	0x20C0      	CALL       _InitSensors
;SimplicityBasic.mbas,171 :: 		ReadSensors()
0x01A9	0x20CF      	CALL       _ReadSensors
;SimplicityBasic.mbas,173 :: 		if s1 < 100 then
0x01AA	0x3080      	MOVLW      128
0x01AB	0x0623      	XORWF      _s1+1, 0
0x01AC	0x00F0      	MOVWF      R0
0x01AD	0x3080      	MOVLW      128
0x01AE	0x0270      	SUBWF      R0, 0
0x01AF	0x1D03      	BTFSS      STATUS, 2
0x01B0	0x29B3      	GOTO       L__main130
0x01B1	0x3064      	MOVLW      100
0x01B2	0x0222      	SUBWF      _s1, 0
L__main130:
0x01B3	0x1803      	BTFSC      STATUS, 0
0x01B4	0x29BB      	GOTO       L__main99
;SimplicityBasic.mbas,174 :: 		PWM1_Set_Duty(180)
0x01B5	0x30B4      	MOVLW      180
0x01B6	0x00B4      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x01B7	0x2069      	CALL       _PWM1_Set_Duty
;SimplicityBasic.mbas,175 :: 		PWM2_Set_Duty(200)
0x01B8	0x30C8      	MOVLW      200
0x01B9	0x00B4      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x01BA	0x202E      	CALL       _PWM2_Set_Duty
L__main99:
;SimplicityBasic.mbas,178 :: 		if s2 < 100 then
0x01BB	0x3080      	MOVLW      128
0x01BC	0x062B      	XORWF      _s2+1, 0
0x01BD	0x00F0      	MOVWF      R0
0x01BE	0x3080      	MOVLW      128
0x01BF	0x0270      	SUBWF      R0, 0
0x01C0	0x1D03      	BTFSS      STATUS, 2
0x01C1	0x29C4      	GOTO       L__main131
0x01C2	0x3064      	MOVLW      100
0x01C3	0x022A      	SUBWF      _s2, 0
L__main131:
0x01C4	0x1803      	BTFSC      STATUS, 0
0x01C5	0x29CC      	GOTO       L__main102
;SimplicityBasic.mbas,179 :: 		PWM1_Set_Duty(190)
0x01C6	0x30BE      	MOVLW      190
0x01C7	0x00B4      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x01C8	0x2069      	CALL       _PWM1_Set_Duty
;SimplicityBasic.mbas,180 :: 		PWM2_Set_Duty(200)
0x01C9	0x30C8      	MOVLW      200
0x01CA	0x00B4      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x01CB	0x202E      	CALL       _PWM2_Set_Duty
L__main102:
;SimplicityBasic.mbas,183 :: 		if s3 < 100 then
0x01CC	0x3080      	MOVLW      128
0x01CD	0x062D      	XORWF      _s3+1, 0
0x01CE	0x00F0      	MOVWF      R0
0x01CF	0x3080      	MOVLW      128
0x01D0	0x0270      	SUBWF      R0, 0
0x01D1	0x1D03      	BTFSS      STATUS, 2
0x01D2	0x29D5      	GOTO       L__main132
0x01D3	0x3064      	MOVLW      100
0x01D4	0x022C      	SUBWF      _s3, 0
L__main132:
0x01D5	0x1803      	BTFSC      STATUS, 0
0x01D6	0x29DD      	GOTO       L__main105
;SimplicityBasic.mbas,184 :: 		PWM1_Set_Duty(200)
0x01D7	0x30C8      	MOVLW      200
0x01D8	0x00B4      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x01D9	0x2069      	CALL       _PWM1_Set_Duty
;SimplicityBasic.mbas,185 :: 		PWM2_Set_Duty(200)
0x01DA	0x30C8      	MOVLW      200
0x01DB	0x00B4      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x01DC	0x202E      	CALL       _PWM2_Set_Duty
L__main105:
;SimplicityBasic.mbas,188 :: 		if s4 < 100 then
0x01DD	0x3080      	MOVLW      128
0x01DE	0x062F      	XORWF      _s4+1, 0
0x01DF	0x00F0      	MOVWF      R0
0x01E0	0x3080      	MOVLW      128
0x01E1	0x0270      	SUBWF      R0, 0
0x01E2	0x1D03      	BTFSS      STATUS, 2
0x01E3	0x29E6      	GOTO       L__main133
0x01E4	0x3064      	MOVLW      100
0x01E5	0x022E      	SUBWF      _s4, 0
L__main133:
0x01E6	0x1803      	BTFSC      STATUS, 0
0x01E7	0x29EE      	GOTO       L__main108
;SimplicityBasic.mbas,189 :: 		PWM1_Set_Duty(200)
0x01E8	0x30C8      	MOVLW      200
0x01E9	0x00B4      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x01EA	0x2069      	CALL       _PWM1_Set_Duty
;SimplicityBasic.mbas,190 :: 		PWM2_Set_Duty(190)
0x01EB	0x30BE      	MOVLW      190
0x01EC	0x00B4      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x01ED	0x202E      	CALL       _PWM2_Set_Duty
L__main108:
;SimplicityBasic.mbas,193 :: 		if s5 < 100 then
0x01EE	0x3080      	MOVLW      128
0x01EF	0x0625      	XORWF      _s5+1, 0
0x01F0	0x00F0      	MOVWF      R0
0x01F1	0x3080      	MOVLW      128
0x01F2	0x0270      	SUBWF      R0, 0
0x01F3	0x1D03      	BTFSS      STATUS, 2
0x01F4	0x29F7      	GOTO       L__main134
0x01F5	0x3064      	MOVLW      100
0x01F6	0x0224      	SUBWF      _s5, 0
L__main134:
0x01F7	0x1803      	BTFSC      STATUS, 0
0x01F8	0x29FF      	GOTO       L__main111
;SimplicityBasic.mbas,194 :: 		PWM1_Set_Duty(200)
0x01F9	0x30C8      	MOVLW      200
0x01FA	0x00B4      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x01FB	0x2069      	CALL       _PWM1_Set_Duty
;SimplicityBasic.mbas,195 :: 		PWM2_Set_Duty(180)
0x01FC	0x30B4      	MOVLW      180
0x01FD	0x00B4      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x01FE	0x202E      	CALL       _PWM2_Set_Duty
L__main111:
;SimplicityBasic.mbas,198 :: 		if s6 or s7 < 100 then
0x01FF	0x0828      	MOVF       _s7, 0
0x0200	0x0426      	IORWF      _s6, 0
0x0201	0x00F1      	MOVWF      R1
0x0202	0x0827      	MOVF       _s6+1, 0
0x0203	0x0429      	IORWF      _s7+1, 0
0x0204	0x00F2      	MOVWF      R1+1
0x0205	0x3080      	MOVLW      128
0x0206	0x0672      	XORWF      R1+1, 0
0x0207	0x00F0      	MOVWF      R0
0x0208	0x3080      	MOVLW      128
0x0209	0x0270      	SUBWF      R0, 0
0x020A	0x1D03      	BTFSS      STATUS, 2
0x020B	0x2A0E      	GOTO       L__main135
0x020C	0x3064      	MOVLW      100
0x020D	0x0271      	SUBWF      R1, 0
L__main135:
0x020E	0x1803      	BTFSC      STATUS, 0
0x020F	0x2A16      	GOTO       L__main114
;SimplicityBasic.mbas,199 :: 		PWM1_Set_Duty(200)
0x0210	0x30C8      	MOVLW      200
0x0211	0x00B4      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0212	0x2069      	CALL       _PWM1_Set_Duty
;SimplicityBasic.mbas,200 :: 		PWM1_Set_Duty(170)
0x0213	0x30AA      	MOVLW      170
0x0214	0x00B4      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0215	0x2069      	CALL       _PWM1_Set_Duty
L__main114:
;SimplicityBasic.mbas,203 :: 		wend
0x0216	0x29A8      	GOTO       L__main94
L_end_main:
0x0217	0x2A17      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [43]    _Mul_16x16_U
0x002E      [59]    _PWM2_Set_Duty
0x0069      [59]    _PWM1_Set_Duty
0x00A4       [6]    _PWM1_Init
0x00AA       [8]    _PWM2_Start
0x00B2       [8]    _PWM1_Start
0x00BA       [6]    _PWM2_Init
0x00C0      [15]    _InitSensors
0x00CF     [171]    _ReadSensors
0x017A       [7]    _StopMotors
0x0181     [151]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x001B       [1]    CCPR2L
0x001D       [1]    CCP2CON
0x0020       [2]    ___DoICPAddr
0x0022       [2]    _s1
0x0024       [2]    _s5
0x0026       [2]    _s6
0x0028       [2]    _s7
0x002A       [2]    _s2
0x002C       [2]    _s3
0x002E       [2]    _s4
0x0030       [4]    FARG_PWM2_Init_PWM_Freq
0x0030       [4]    FARG_PWM1_Init_PWM_Freq
0x0034       [1]    FARG_PWM2_Set_Duty_new_duty
0x0034       [1]    FARG_PWM1_Set_Duty_new_duty
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC2_bit
0x0092       [1]    PR2
0x009F       [1]    ADCON1
//** Label List: ** 
//----------------------------------------------
  L_end__StopMotors
  L_end__InitSensors
  L__InitSensors2
  L_end__ReadSensors
  L__ReadSensors4
  L__ReadSensors5
  L__ReadSensors6
  L__ReadSensors7
  L__ReadSensors8
  L__ReadSensors9
  L__ReadSensors10
  L__ReadSensors11
  L__ReadSensors12
  L__ReadSensors13
  L__ReadSensors14
  L__ReadSensors15
  L__ReadSensors16
  L__ReadSensors17
  L__ReadSensors18
  L__ReadSensors19
  L__ReadSensors20
  L__ReadSensors21
  L__ReadSensors22
  L__ReadSensors23
  L__ReadSensors24
  L__ReadSensors25
  L__ReadSensors26
  L__ReadSensors27
  L__ReadSensors28
  L__ReadSensors29
  L__ReadSensors30
  L__ReadSensors31
  L__ReadSensors32
  L__ReadSensors33
  L__ReadSensors34
  L__ReadSensors35
  L__ReadSensors36
  L__ReadSensors37
  L__ReadSensors38
  L__ReadSensors39
  L__ReadSensors40
  L__ReadSensors41
  L__ReadSensors42
  L__ReadSensors43
  L__ReadSensors44
  L__ReadSensors45
  L__ReadSensors46
  L__ReadSensors47
  L__ReadSensors48
  L__ReadSensors49
  L__ReadSensors50
  L__ReadSensors51
  L__ReadSensors52
  L__ReadSensors53
  L__ReadSensors54
  L__ReadSensors55
  L__ReadSensors56
  L__ReadSensors57
  L__ReadSensors58
  L__ReadSensors59
  L__ReadSensors60
  L__ReadSensors61
  L__ReadSensors62
  L__ReadSensors63
  L__ReadSensors64
  L__ReadSensors65
  L__ReadSensors66
  L__ReadSensors67
  L__ReadSensors68
  L__ReadSensors69
  L__ReadSensors70
  L__ReadSensors71
  L__ReadSensors72
  L__ReadSensors73
  L__ReadSensors74
  L__ReadSensors75
  L__ReadSensors76
  L__ReadSensors77
  L__ReadSensors78
  L__ReadSensors79
  L__ReadSensors80
  L_end__ReadAverage
  L__ReadAverage82
  L__ReadAverage83
  L__ReadAverage84
  L__ReadAverage85
  L__ReadAverage86
  L__ReadAverage87
  L__ReadAverage88
  L__ReadAverage89
  L__ReadAverage90
  L__ReadAverage91
  L_end__main
  L__main93
  L__main94
  L__main95
  L__main96
  L__main97
  L__main98
  L__main99
  L__main100
  L__main101
  L__main102
  L__main103
  L__main104
  L__main105
  L__main106
  L__main107
  L__main108
  L__main109
  L__main110
  L__main111
  L__main112
  L__main113
  L__main114
  L__main115
  L_end_StopMotors
  _StopMotors
  L_end_InitSensors
  _InitSensors
  L_end_ReadSensors
  _ReadSensors
  L__ReadSensors119
  L__ReadSensors120
  L__ReadSensors121
  L__ReadSensors122
  L__ReadSensors123
  L__ReadSensors124
  L__ReadSensors125
  L_end_ReadAverage
  _ReadAverage
  L__ReadAverage127
  L__ReadAverage128
  L_end_main
  _main
  L__main130
  L__main131
  L__main132
  L__main133
  L__main134
  L__main135
  L_end__Mul_8x8_U
  L_end__Mul_16x16_U
  L_end__Div_8x8_U
  L__Div_8x8_U3
  L__Div_8x8_U4
  L__Div_8x8_U5
  L_end__Div_16x16_U
  L_end__Mul_8x8_S
  L_end__Mul_16x16_S
  L_end__Div_16x16_S_L
  L_end__Div_16x16_S
  L__Div_16x16_S11
  L__Div_16x16_S12
  L__Div_16x16_S13
  L__Div_16x16_S14
  L__Div_16x16_S15
  L__Div_16x16_S16
  L_end__Div_8x8_S
  L_end__SDIV3232L
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_end__COMFREM
  L_end__Div_32x32_S
  L__Div_32x32_S25
  L__Div_32x32_S26
  L__Div_32x32_S27
  L__Div_32x32_S28
  L__Div_32x32_S29
  L__Div_32x32_S30
  L__Div_32x32_S31
  L__Div_32x32_S32
  L__Div_32x32_S33
  L__Div_32x32_S34
  L__Div_32x32_S35
  L__Div_32x32_S36
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  L_end__Div_32x32_U
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  L_end__Mul_32x32_U
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  L_end__Mul_32x32_S
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8x8_U
  _Mul_8x8_U
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_end__PWM1_Init
  L_end__PWM1_Set_Duty
  L_end__PWM1_Start
  L_end__PWM1_Stop
  L_end__PWM2_Init
  L_end__PWM2_Set_Duty
  L_end__PWM2_Start
  L_end__PWM2_Stop
  L_end_PWM1_Init
  _PWM1_Init
  L_end_PWM1_Set_Duty
  _PWM1_Set_Duty
  L__PWM1_Set_Duty10
  L__PWM1_Set_Duty11
  L__PWM1_Set_Duty12
  L__PWM1_Set_Duty13
  L_end_PWM1_Start
  _PWM1_Start
  L_end_PWM1_Stop
  _PWM1_Stop
  L_end_PWM2_Init
  _PWM2_Init
  L_end_PWM2_Set_Duty
  _PWM2_Set_Duty
  L__PWM2_Set_Duty18
  L__PWM2_Set_Duty19
  L__PWM2_Set_Duty20
  L__PWM2_Set_Duty21
  L_end_PWM2_Start
  _PWM2_Start
  L_end_PWM2_Stop
  _PWM2_Stop
