program SimplicityBasic

' This will hold our sensor values
Dim sensor as Integer[8]

'-------------------------------------------------------------------------------
' Emergency motor stop
'-------------------------------------------------------------------------------
 sub procedure StopMotors
    PWM1_Set_Duty(0)
    PWM2_Set_Duty(0)
end sub

'-------------------------------------------------------------------------------
' Read the QTR-8RC sensor module, set pins as output and set high then delay
' for 10us and set the pins as input.
'-------------------------------------------------------------------------------
sub procedure InitSensors
     TRISB = 0x00
     PORTB = 0xFF

     delay_us(10)
     
     TRISB = 0xFF
     
     ' Set up initial sensor array
     sensor[1] = PORTB.RB7
     sensor[2] = PORTB.RB6
     sensor[3] = PORTB.RB5
     sensor[4] = PORTB.RB4
     sensor[5] = PORTB.RB3
     sensor[6] = PORTB.RB2
     sensor[7] = PORTB.RB1
end sub

'-------------------------------------------------------------------------------
' Here we actually read the sensor line to find our values
'-------------------------------------------------------------------------------
sub procedure ReadSensors
Dim s_count as Byte
    
    for s_count = 0 to 6
       if sensor[s_count] <> 0  then
          while sensor[s_count] <> 0
                sensor[s_count] = sensor[s_count] + 1
                if sensor[s_count] >= 800 then
                   break 
                end if
          wend
       end if
    next s_count

end sub

'-------------------------------------------------------------------------------
' Main program begins here, we set up our ports and PWM and read the sensors
' then manipulate the data to follow the line
'-------------------------------------------------------------------------------
main:
     ADCON1  = 6
     PORTA   = 0
     TRISA   = 0
     PORTC   = 0
     TRISC   = 0
     PWM1_Init(5000)
     PWM2_Init(5000)
     PWM1_Start()
     PWM2_Start()
     
     ' Turn off RBx Pull-Ups
     OPTION_REG.NOT_RBPU = 1
     
     ' We are only driving our motors forward (M1)
     PORTA.RA0 = 0
     PORTA.RA1 = 1
     
     ' We are only driving our motors forward (M2)
     PORTA.RA2 = 0
     PORTA.RA3 = 1
     
     ' Set initial duty cycle
     StopMotors()
     
'-------------------------------------------------------------------------------
' Actual program starts here by reading sensors and setting PWM accordingly
'-------------------------------------------------------------------------------
     while 1
            InitSensors()
            ReadSensors()
            
            if sensor[1] < 100 then
               PWM1_Set_Duty(180)
               PWM2_Set_Duty(200)
            end if
            
            if sensor[2] < 100 then
               PWM1_Set_Duty(190)
               PWM2_Set_Duty(200)
            end if
            
            if sensor[3] < 100 then
               PWM1_Set_Duty(200)
               PWM2_Set_Duty(200)
            end if

            if sensor[4] < 100 then
               PWM1_Set_Duty(200)
               PWM2_Set_Duty(190)
            end if
            
            if sensor[5] < 100 then
               PWM1_Set_Duty(200)
               PWM2_Set_Duty(180)
            end if
            
            if sensor[6] or sensor[7] < 100 then
               PWM1_Set_Duty(200)
               PWM1_Set_Duty(170)
            end if

     wend
end.